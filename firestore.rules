rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /characters/{characterId} {
    	allow read: if true;
      allow create: if request.auth.uid != null;
	    allow write, delete: if request.auth.uid == resource.data.uid;
  	  allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(["campaignId", "worldId", "initiativeStatus"])     

      function checkIsOwner() {
      	let character = get(/databases/$(database)/documents/characters/$(characterId)).data;
        return character.uid == request.auth.uid;
      }
      
      match /tracks/{document=**} {
      	allow read: if true;
        allow update: if request.auth.uid != null;
        allow delete, create: if checkIsOwner();
      }
      match /{document=**} {
      	allow read: if true;
        allow write, delete: if checkIsOwner();
      }
    }
    match /campaigns/{campaignId} {
    	allow read, write, delete: if request.auth.uid != null;
        
    	match /{document=**} {
    		allow read, write, delete: if request.auth.uid != null;
      }
      
      match /game-log/{document=**} {
      	allow read: if true;
      }
    }
    match /worlds/{worldId} {
    	allow read: if true;
      allow create: if request.auth.uid != null;
      allow write: if request.auth.uid in resource.data.ownerIds;
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(["ownerIds"])     

      function checkIsOwner() {
      	let world = get(/databases/$(database)/documents/worlds/$(worldId)).data;
        return request.auth.uid in world.ownerIds;
      }
      
      match /locations/{locationId} {
     		allow read, create, update: if true;
        allow delete: if checkIsOwner();
          
        match /private/{gmNotes} {
        	allow read, write: if checkIsOwner();
        }
        match /public/{notes} {
        	allow read, create, update: if true;
          allow delete: if checkIsOwner();
        }
      }
      match /lore/{loreId} {
     		allow read, create, update: if true;
        allow delete: if checkIsOwner();
          
        match /private/{gmNotes} {
        	allow read, write: if checkIsOwner();
        }
        match /public/{notes} {
        	allow read, create, update: if true;
          allow delete: if checkIsOwner();
        }
      }
      match /npcs/{locationId} {
        allow read, create, update: if true;
        allow delete: if checkIsOwner();
          
        match /private/{gmNotes} {
        	allow read, write: if checkIsOwner();
        }
        match /public/{notes} {
        	allow read, create, update: if true;
          allow delete: if checkIsOwner();
        }
      }
      match /sectors/{sectorId} {
     		allow read, create, update: if request.auth.uid != null;
        allow delete: if checkIsOwner();
          match /public/notes {
          	allow read, write: if request.auth.uid != null;
          }
          match /private/notes {
          	allow read, write: if checkIsOwner();
          }
        
        match /locations/{locationId} {
     			allow read, create, update: if request.auth.uid != null;
        	allow delete: if checkIsOwner();
          match /public/notes {
          	allow read, write: if request.auth.uid != null;
          }
          match /private/notes {
          	allow read, write: if checkIsOwner();
          }
        }
      }
    }
    match /homebrew/{homebrewId} {
    	allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow write: if request.auth.uid in resource.data.uids;
      
      function checkIsHomebrewOwner() {
      	let world = get(/databases/$(database)/documents/homebrew/$(homebrewId)).data;
        return request.auth.uid in world.ownerIds;
      }
      
      match /rules/rules {
      	allow read: if request.auth.uid != null;
        allow write: if checkIsHomebrewOwner();
      }
    }
    match /users/{userId} {
    	allow read: if true;
    	allow write: if userId == request.auth.uid;

      match /custom-oracles/{document=**} {
        allow read: if true;
        allow write, delete: if userId == request.auth.uid;
      }
      match /custom-moves/{document=**} {
        allow read: if true;
        allow write, delete: if userId == request.auth.uid;
      }
      match /settings/{document=**} {
      	allow read, write, delete: if userId == request.auth.uid;
      }
    }
    match /{document=**} {
      allow read, write: if false;
    }
  }
}